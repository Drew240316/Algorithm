if __name__ == '__main__': 구문의 역할
파이썬에서 if __name__ == '__main__':는 모듈을 직접 실행할 때와 다른 파일에서 임포트할 때의 동작을 구분하는 구문입니다.

모듈을 직접 실행할 때:

파이썬 파일을 직접 실행하면, 이 파일의 __name__ 변수 값은 '__main__'이 됩니다.
그러면 if __name__ == '__main__': 아래에 있는 코드가 실행됩니다.
예를 들어, max_of.py 파일을 직접 실행하면 그 안에 있는 함수 정의와 함께 if __name__ == '__main__': 아래의 코드도 실행됩니다.

다른 파일에서 임포트(import)할 때:

max_of.py를 다른 파일에서 임포트할 때, 이 모듈의 __name__ 값은 'max_of'가 됩니다 (즉, 모듈 이름이 __name__ 값으로 설정됨).
이 경우 if __name__ == '__main__':는 거짓이 되어, 그 아래의 코드는 실행되지 않습니다. 따라서 max_of.py 내부의 함수 정의만 불러와 사용할 수 있게 됩니다.
예시로 설명:
1. max_of.py 파일:
python
코드 복사
from typing import Any, Sequence

def max_of(a: Sequence) -> Any:
    maximum = a[0]
    for i in range(1, len(a)):
        if a[i] > maximum:
            maximum = a[i]
    return maximum

if __name__ == '__main__':
    print('배열의 최댓값을 구합니다.')
    t = [4, 7, 5, 6, 2, 3, 14, 1]
    print(f'{t}의 최댓값은 {max_of(t)}입니다.')




2. 이 파일을 직접 실행할 때:
터미널에서 python max_of.py로 실행하면 if __name__ == '__main__': 아래에 있는 코드도 실행됩니다.
결과는 배열의 최댓값을 구합니다.와 함께 최대값을 계산하여 출력합니다.
3. 다른 파일에서 이 모듈을 임포트할 때:
02-02.py 파일에서 import max_of 또는 from max_of import max_of를 사용해 max_of.py를 임포트하면, 함수 정의만 불러와서 사용할 수 있습니다.
하지만 if __name__ == '__main__': 아래의 코드는 실행되지 않습니다. 즉, 다른 파일에서 이 모듈을 사용할 때는 함수만 불러와 사용할 수 있게 됩니다.
4. 다른 파일에서 사용 예시 (02-02.py):
python
코드 복사
from max_of import max_of  # max_of.py의 함수를 불러옴

t = [4, 7, 5, 6, 2, 3, 14, 1]
print(f'{t}의 최댓값은 {max_of(t)}입니다.')
이 경우 max_of.py의 if __name__ == '__main__': 부분은 실행되지 않고, max_of 함수만 임포트되어 사용할 수 있게 됩니다.

요약:
if __name__ == '__main__': 아래의 코드는 그 파일을 직접 실행할 때만 동작합니다.
다른 파일에서 임포트할 때는 그 함수들만 불러올 수 있으며, if __name__ == '__main__': 아래의 코드는 실행되지 않습니다.