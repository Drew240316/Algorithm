# max_of 배열 원소의 최댓값을 구하는 함수
# max_of는 스캔(sacn) 방식을 생각하자. 배열의 원소를 하나씩 차례대로 주목하여 인데스를 하나씩 증가시켜 최종적으로 가장 큰 값.
# 스캔은 결국 최종적으로 종착한 범위의 갯수를 알아야 한다.


from typing import Any, Sequence

def max_of(a:Sequence) -> Any:
    maximum = a[0]

    for i in range(1,len(a)):  #여기서 a는 함수가 호출 될 때, 사용자가 입력하는 argument다.
        if a[i] > maximum :
           maximum = a[i]
    return maximum

# if절은 제어문으로 호출 ~ 실행 단계
if __name__ == '__main__':  # __name__ == '__main__' 뜻이 뭐임?
                            # __name__은 특별한 변수로 == '__main__'으로 작성되면 아래 코드 실행, 다른 파일에서 import하면 name자체가 '파일이름'이 됨 그래서 코드 실행 안됨.
    print('배열의 최댓값을 구합니다.')
    num = int(input('원소 수를 구하시오: '))
    x = [None] * num       # 원소 수가 num인 리스트를 생성  # x= num이랑 차이가뭐임?
                           # None은 파이썬에서 아직 값이 할당되지 않았음을 나타내는 값으로, 리스트의 요소를 초기화할 때 자주 사용
                           # x =num을 사용하면 정수로 입력이 됨
    for i in range(num):   # 사용자가 입력한 원소의 수 만큼 범위를 지정하고 이를 i라는 변수에 넣음
        x[i] = int(input(f'x[{i}]값을 입력하세요.: ')) # 코드는 안쪽에서 바깥쪽으로 실행된다.#f-string이 실행>사용자에게 f'~를 보여주고 입력하라고함>int로 입력이됨>x[i]라는 리스트 값에 저장

    print(f'최대값은 {max_of(x)}입니다.') # max_of함수가 실행이 위에서 이미 되었다 (사용자가 입력한 리스트 들이 나옴) > 거기서 가장 큰 값을 프린트






#(보충)
## def 함수이름(파라미터값==함수에서 사용되는 변수):
## a: Sequence는 함수 정의에서 사용된 파라미터.
## 함수 호출 시 전달되는 실제 값(예: [1, 2, 3])은 **인자(Argument)**입니다.
## ->반환한다 라는 뜻
## typing 모듈은 사용자가 입력과 출력 시 자료형을 알려주는 함수
## Any는 아무 자료형 값이나 반환하는 클래스
## sequence는 시퀀스 타입, 리스트,튜플 자료형과 같은 값들을 받을 수 있다. a라는 파라미터 값을 받으며 시퀀스타입이여야한다.